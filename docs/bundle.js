(()=>{"use strict";var e={590:(e,t,r)=>{t.EM=t.uG=void 0;const i=r(299),n=r(991),o=r(549),c=r(884);t.uG=function(e){if(e)return(0,i.parseNumber)(`${e}`)},t.EM=function(e,t,r){if(void 0===e)return;if(null===e)return;const i=Number(e);return isNaN(i)?void 0:(0,c.toChinese)(i,t||o.Style.Small,r||n.Script.Traditional)}},774:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mapDigit=void 0,t.mapDigit=function(e){const t=[...e].map((e=>{switch(e){case"一":case"壹":case"乙":case"1":case"１":return 1;case"二":case"貳":case"貮":case"贰":case"兩":case"两":case"2":case"２":return 2;case"三":case"參":case"叁":case"参":case"叄":case"3":case"３":return 3;case"四":case"肆":case"4":case"４":return 4;case"五":case"伍":case"5":case"５":return 5;case"六":case"陸":case"陆":case"6":case"６":return 6;case"七":case"柒":case"7":case"７":return 7;case"八":case"捌":case"8":case"８":return 8;case"九":case"玖":case"9":case"９":return 9;case"零":case"〇":case"0":case"０":return 0;default:return}}));if(!t.includes(void 0))return t.join("")}},843:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseBig=void 0;const i=r(739);t.parseBig=function(e){const t=/(?:([^兆]*)兆)?(?:([^億亿]*)[億亿])?([零０0])?(.*)/.exec(e);if(!t)return;const r=t[1],n=void 0!==r?r?(0,i.parseMiddle)(r):1:0;if(void 0===n)return;const o=t[2],c=void 0!==o?o?(0,i.parseMiddle)(o):1:0;if(void 0===c)return;const s=t[3],a=t[4],u=a?(0,i.parseMiddle)(a):0;if(void 0!==u){if(s||/[萬万千仟百佰十拾]/.exec(a||""))return 1e12*n+1e8*c+u;{const e=void 0!==o?1e7:void 0!==r?1e11:void 0;return void 0!==e?1e12*n+1e8*c+u*(e/(a?.length>=2?Math.pow(10,a.length-1):1)):u}}}},417:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseDigit=void 0;const i=r(774);t.parseDigit=function(e){const t=(0,i.mapDigit)(e);if(void 0!==t)return parseInt(t)}},739:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseMiddle=void 0;const i=r(890);t.parseMiddle=function(e){const t=/(?:([^萬万]*)[萬万])?([零０0])?(.*)?/.exec(e);if(!t)return;const r=t[1],n=void 0!==r?r?(0,i.parseSmall)(r):1:0;if(void 0===n)return;const o=t[2],c=t[3],s=c?(0,i.parseSmall)(c):0;return void 0!==s?o||/[千仟百佰十拾]/.exec(c||"")?1e4*n+s:void 0!==r?1e4*n+s*(1e3/(c?.length>=2?Math.pow(10,c.length-1):1)):s:void 0}},299:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseNumber=void 0;const i=r(774),n=r(843);t.parseNumber=function(e){const t=/([負负-])?(.*?)(?:[點点.．]([^點点.．]*))?$/.exec(e);if(!t)return;const r=t[1]?-1:1,o=t[2],c=o?(0,n.parseBig)(o):0;if(void 0===c)return;const s=t[3],a=s?(0,i.mapDigit)(s):"0";return void 0!==a?r*(c+parseFloat(`0.${a||"0"}`)):void 0}},890:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSmall=void 0;const i=r(417);t.parseSmall=function(e){const t=/(?:([^千仟]*)[千仟])?(?:([^百佰]*)[百佰])?(?:([^十拾]*)[十拾])?([零０0])?(.*)?/.exec(e);if(!t)return;const r=t[1],n=void 0!==r?r?(0,i.parseDigit)(r):1:0;if(void 0===n)return;const o=t[2],c=void 0!==o?o?(0,i.parseDigit)(o):1:0;if(void 0===c)return;const s=t[3],a=void 0!==s?s?(0,i.parseDigit)(s):1:0;if(void 0===a)return;const u=t[4],l=t[5],d=l?(0,i.parseDigit)(l):0;if(void 0!==d){if(u)return 1e3*n+100*c+10*a+d;{const e=void 0!==s?1:void 0!==o?10:void 0!==r?100:void 0;return void 0!==e?1e3*n+100*c+10*a+d*(e/(l?.length>=2?Math.pow(10,l.length-1):1)):d}}}},168:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.printBig=void 0;const i=r(349),n=r(991),o=r(549);t.printBig=function(e,t=o.Style.Small,r=n.Script.Traditional){if(e.length>16)throw new Error(`cannot convert to Chinese as value ${e} is too big`);const c=e.slice(-4),s=c?(0,i.printSmall)(c,t,r):"",a=e.slice(-8,-4),u=a?(0,i.printSmall)(a,t,r)+(r===n.Script.Traditional?"萬":"万"):"",l=e.slice(-12,-8),d=l?(0,i.printSmall)(l,t,r)+(r===n.Script.Traditional?"億":"亿"):"",p=e.slice(-16,-12);return`${p?(0,i.printSmall)(p,t,r)+"兆":""}${d}${u}${s}`.replace(/(零[萬万億亿兆]?)+/,"零").replace(/零+$/,"")||"零"}},565:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.printDigit=void 0;const i=r(991),n=r(549);t.printDigit=function(e,t=n.Style.Small,r=i.Script.Traditional){switch(e){case"1":return t===n.Style.Big?"壹":"一";case"2":return t===n.Style.Big?r===i.Script.Traditional?"貳":"贰":"二";case"3":return t===n.Style.Big?"參":"三";case"4":return t===n.Style.Big?"肆":"四";case"5":return t===n.Style.Big?"伍":"五";case"6":return t===n.Style.Big?r===i.Script.Traditional?"陸":"陆":"六";case"7":return t===n.Style.Big?"柒":"七";case"8":return t===n.Style.Big?"捌":"八";case"9":return t===n.Style.Big?"玖":"九";case"0":return"零";default:return""}}},349:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.printSmall=void 0;const i=r(565),n=r(991),o=r(549);t.printSmall=function(e,t=o.Style.Small,r=n.Script.Traditional){if(e.length>4)throw new Error(`cannot convert to Chinese as value ${e} is too big`);const c=[...e].reverse().map(((e,n)=>{if("0"===e)return"零";const c=(0,i.printDigit)(e,t,r);switch(n){case 0:return c;case 1:return c+(t===o.Style.Big?"拾":"十");case 2:return c+(t===o.Style.Big?"佰":"百");case 3:return c+(t===o.Style.Big?"仟":"千");default:throw new Error}})).reverse();return c.every((e=>"零"===e))?"零":c.join("").replace(/零+/,"零").replace(/零+$/,"")}},991:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Script=void 0,(r=t.Script||(t.Script={})).Traditional="traditional",r.Simplified="simplified"},549:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Style=void 0,(r=t.Style||(t.Style={})).Small="small",r.Big="big"},390:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toArabic=void 0,t.toArabic=function(e){const t=e.toString(),r=/(-?)(\d+)(?:\.(\d+))?e([+-])(\d+)/.exec(t);if(!r)return t;const i=r[1],n=r[2],o=r[3]||"",c=r[4],s=r[5],a=parseInt(s);if("+"===c){const e=`${o}${"0".repeat(a)}`.substring(0,a),t=`${o}`.substring(a);return t?`${i}${n}${e}.${t}`:`${i}${n}${e}`}return`${i}0.${"0".repeat(a-1)}${n}${o}`}},884:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toChinese=void 0;const i=r(168),n=r(565),o=r(991),c=r(549),s=r(390);t.toChinese=function(e,t=c.Style.Small,r=o.Script.Traditional){const a=(0,s.toArabic)(e),u=/(-?)(\d+)(?:\.(\d+))?/.exec(a);if(!u)throw new Error("should match anyways");const l=u[1]?r===o.Script.Traditional?"負":"负":"",d=u[2],p=(0,i.printBig)(d,t,r),v=[...u[3]||""].map((e=>(0,n.printDigit)(e,t,r))).join("");return`${l}${p}${v?(r===o.Script.Traditional?"點":"点")+v:""}`}},93:(e,t,r)=>{var i=r(590),n=r(390);const o=JSON.parse('["四百二","千一二","一二三","一二三4","三億五千萬","一千二百三十四萬五千六百七十八","三兆五仟零七億９千萬","一萬億","七二一","八三一","十點一","三萬二千點七","負十二點三","负柒佰柒拾柒","五十六","拾四亿","七七四十九","九九八十一"]'),c=document.querySelector(".card.parse"),s=c.querySelector("input"),a=c.querySelector(".output"),u=c.querySelector(".code");function l(){const e=(0,i.uG)(s.value);if(void 0===e)return c.classList.add("error"),void $(u,`parseChineseNumber('${s.value}') = undefined`);const t=e.toString();return $(a,t),c.classList.remove("error"),$(u,`parseChineseNumber('${s.value}') = ${(0,n.toArabic)(e)}`),e}c.onclick=()=>s.focus(),setInterval(l,50);const d=document.querySelector(".card.print"),p=d.querySelector("input"),v=d.querySelector(".output"),f=d.querySelector(".code");function S(){const e=Number(p.value);if(isNaN(e))return d.classList.add("error"),void $(f,"toChineseNumber(NaN) = undefined");const t=(0,i.EM)(e);$(v,t),d.classList.remove("error"),$(f,`toChineseNumber(${(0,n.toArabic)(e)}) = ${t}`)}d.onclick=()=>p.focus(),setInterval(S,50);let g=!0,y=0;function m(){const e=o[y++%o.length];s.value=e;const t=l();p.value=t,S()}function $(e,t){e.innerText!==t&&(e.innerText=t)}setInterval((()=>{g&&m()}),1500),document.querySelector(".next").onclick=()=>{g=!0,m()},s.onfocus=()=>g=!1,p.onfocus=()=>g=!1}},t={};!function r(i){var n=t[i];if(void 0!==n)return n.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,r),o.exports}(93)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,